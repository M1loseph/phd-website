services: 
  nginx:
    image: nginx:1.25.4-bookworm
    restart: always
    ports:
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "./fullchain.pem:/etc/nginx/fullchain.pem"
      - "./privkey.pem:/etc/nginx/privkey.pem"
    depends_on:
      - phd-website-analytics-server
  mongo:
    image: mongo:4.4.18
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "/mnt/kingspec-usb/phd-website-analytics-server/mongodb:/data/db"
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
  redis:
    image: redis:7.2.4
    restart: always
    ports:
      - "6379:6379"
  phd-website-analytics-server:
    image: m1loseph/phd-website-analytics-server:0.3
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATA_MONGODB_URI: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017/${MONGODB_DATABASE_NAME}?authSource=admin
      WEB_LIMITING_REDIS_URL: redis://redis:6379
  ddns-runner:
    image: m1loseph/ddns-runner:0.0.4
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      ddns-runner-postgres:
        condition: service_healthy
    environment:
      DDNS_RUNNER_DOMAIN_TO_UPDATE: phdwebsite
      DDNS_RUNNER_DUCK_DNS_ADDRESS: https://duckdns.org
      DDNS_RUNNER_TOKEN: ${DDNS_RUNNER_TOKEN}
      DDNS_RUNNER_POSTGRES_URI: ${DDNS_RUNNER_POSTGRES_URI}
      DDNS_RUNNER_MIGRATION_FILES_DIRECTORY: /ddns-runner/migrations
      DDNS_RUNNER_SERVER_PORT: 3000
      RUST_LOG: info
    volumes:
      - "/etc/ssl:/etc/ssl"
  ddns-runner-postgres:
    image: postgres:16.4
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - "/mnt/kingspec-usb/ddns-runner:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${DDNS_RUNNER_POSTGRES_PASSWORD}
      POSTGRES_USER: ${DDNS_RUNNER_POSTGRES_USER}
      POSTGRES_DB: ${DDNS_RUNNER_POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${DDNS_RUNNER_POSTGRES_USER}", "-d", "${DDNS_RUNNER_POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  prometheus:
    # WARN: before changing this image please run docker inspect {new-image} and copy paste argument to 'coomand' section (leave last flag in it's place)
    # https://stackoverflow.com/questions/56560188/how-to-append-command-to-docker-compose-yml-without-override-existing
    image: prom/prometheus:v2.50.1
    user: root
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - ddns-runner
      - phd-website-analytics-server
    volumes:
      - "/mnt/kingspec-usb/prometheus:/prometheus"
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=60d"

